services:
  db_lab4:
    image: postgres:13-alpine
    container_name: library_postgres_db_lab4
    volumes:
      - postgres_data_lab4:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: user_lab4
      POSTGRES_PASSWORD: password_lab4
      POSTGRES_DB: librarydb_lab4
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_lab4 -d librarydb_lab4"]
      interval: 10s
      timeout: 5s
      retries: 5

  app_lab4:
    build: .
    container_name: library_flask_app_lab4
    ports:
      - "5001:5000"
    depends_on:
      db_lab4:
        condition: service_healthy
    environment:
      FLASK_APP: run.py
      FLASK_ENV: development
      DATABASE_URL: postgresql://user_lab4:password_lab4@db_lab4:5432/librarydb_lab4
    volumes:
      - .:/app
    command: >
      sh -c "python -c 'from run import create_tables_and_seed_data; create_tables_and_seed_data()' &&
             gunicorn -w 4 -b 0.0.0.0:5000 run:app" # Gunicorn слухає на внутрішньому порту 5000 контейнера

volumes:
  postgres_data_lab4: {}
